<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tlbSearch.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddStudent.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <metadata name="colId.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colStudentId.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colHometown.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colAddress.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colPhoneNumber.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colDepartment.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colMajors.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colClass.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colGraduationYear.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colRank.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colCurrentJob.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>